"""initial migrations

Revision ID: ca077c438eb0
Revises:
Create Date: 2025-04-27 14:29:54.106429

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geography

# revision identifiers, used by Alembic.
revision: str = "ca077c438eb0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "User",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("first_name", sa.String(length=32), nullable=True),
        sa.Column("middle_name", sa.String(length=32), nullable=True),
        sa.Column("last_name", sa.String(length=32), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("birth_date", sa.Date(), nullable=True),
        sa.Column("verification_code", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "Waste",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("abbreviated_name", sa.String(length=32), nullable=False),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("abbreviated_name"),
        sa.UniqueConstraint("image_url"),
    )
    op.create_table(
        "Accrual_History",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "reward", sa.Enum("RECYCLE_POINT_ADD", name="rewardtype"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Reception_Point",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column(
            "location",
            Geography(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeogFromText",
                name="geography",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "status",
            sa.Enum("UNDER_MODERATION", "APPROVED", "REJECTED", name="pointstatus"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("address"),
    )
    op.create_table(
        "User_Image",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Waste_Translation",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("waste_id", sa.Uuid(), nullable=False),
        sa.Column(
            "languagecode", sa.Enum("RU", "EN", name="languagecode"), nullable=False
        ),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["waste_id"], ["Waste.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("waste_id", "languagecode", name="uq_waste_lang"),
    )
    op.create_table(
        "Moderation",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("verification_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("reception_point_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"], ["Reception_Point.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Reception_Image",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("reception_point_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"], ["Reception_Point.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Reception_Point_Waste",
        sa.Column("waste_id", sa.Uuid(), nullable=False),
        sa.Column("reception_point_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"], ["Reception_Point.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["waste_id"], ["Waste.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("waste_id", "reception_point_id"),
    )
    op.create_table(
        "Work_Schedule",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "dayofweek",
            sa.Enum(
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY",
                name="dayofweek",
            ),
            nullable=False,
        ),
        sa.Column("open_time", sa.Time(), nullable=True),
        sa.Column("close_time", sa.Time(), nullable=True),
        sa.Column("reception_point_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"], ["Reception_Point.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Work_Schedule")
    op.drop_table("Reception_Point_Waste")
    op.drop_table("Reception_Image")
    op.drop_table("Moderation")
    op.drop_table("Waste_Translation")
    op.drop_table("User_Image")
    op.drop_table("Reception_Point")
    op.drop_table("Accrual_History")
    op.drop_table("Waste")
    op.drop_table("User")
    # ### end Alembic commands ###
