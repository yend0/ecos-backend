"""create tables

Revision ID: ac89ba4e124d
Revises: 8d08e3d144ec
Create Date: 2025-02-12 14:04:35.076735

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ac89ba4e124d"
down_revision: Union[str, None] = "8d08e3d144ec"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Accrual_History",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "reward", sa.Enum("RECYCLE_POINT_ADD", name="rewardtype"), nullable=False
        ),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "Reception_Point",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("images_url", sa.String(length=255), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("UNDER_MODERATION", "APPROVED", "REJECTED", name="pointstatus"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("address"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("images_url"),
    )
    op.create_table(
        "Waste",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("reception_point_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"],
            ["Reception_Point.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("image_url"),
    )
    op.create_table(
        "Work_Schedule",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("day_of_week", sa.SmallInteger(), nullable=False),
        sa.Column("open_time", sa.Time(), nullable=False),
        sa.Column("close_time", sa.Time(), nullable=False),
        sa.Column("reception_point_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"],
            ["Reception_Point.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "Drop_Off_Point_Waste",
        sa.Column("waste_id", sa.Integer(), nullable=False),
        sa.Column("reception_point_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reception_point_id"], ["Reception_Point.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["waste_id"], ["Waste.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("waste_id", "reception_point_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Drop_Off_Point_Waste")
    op.drop_table("Work_Schedule")
    op.drop_table("Waste")
    op.drop_table("Reception_Point")
    op.drop_table("Accrual_History")
    # ### end Alembic commands ###
